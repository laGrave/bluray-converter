version: '3.8'

services:
  # Watcher Service - Scans for new BluRay movies
  watcher:
    build: ./watcher
    container_name: bluray-watcher
    restart: always
    environment:
      - DATABASE_PATH=/app/data/bluray_converter.db
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ${MOVIES_BASE_PATH}:/movies:ro
      - ./volumes/db:/app/data
      - ./volumes/logs:/app/logs
    depends_on:
      - api
    networks:
      - bluray-network
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import requests; requests.get(\"http://localhost:8001/health\")'"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Service - REST API and webhook handler
  api:
    build: ./api
    container_name: bluray-api
    restart: always
    ports:
      - "${NAS_PORT:-8080}:8000"
    environment:
      - DATABASE_PATH=/app/data/bluray_converter.db
      - MAC_MINI_IP=${MAC_MINI_IP}
      - MAC_MINI_PORT=${MAC_MINI_PORT:-8000}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ${MOVIES_BASE_PATH}:/movies
      - ./volumes/db:/app/data
      - ./volumes/logs:/app/logs
    networks:
      - bluray-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Scheduler Service - Cron jobs for automated scanning
  scheduler:
    build: ./scheduler
    container_name: bluray-scheduler
    restart: always
    environment:
      - API_URL=http://api:8000
      - SCAN_SCHEDULE=${SCAN_SCHEDULE:-0 3 * * *}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./volumes/logs:/app/logs
    depends_on:
      - api
    networks:
      - bluray-network
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import os; os.path.exists(\"/tmp/scheduler_running\") and exit(0) or exit(1)'"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Web UI - Management interface
  web-ui:
    build: ./web-ui
    container_name: bluray-webui
    restart: always
    ports:
      - "${WEB_UI_PORT:-8081}:80"
    environment:
      - API_BASE_URL=http://${NAS_IP:-localhost}:${NAS_PORT:-8080}/api
    volumes:
      - ./volumes/logs:/var/log/nginx
    depends_on:
      - api
    networks:
      - bluray-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bluray-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  logs_data:
    driver: local